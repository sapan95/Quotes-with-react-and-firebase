{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isFormFocused","setIsFormFocused","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCsD/BC,EAnDG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAA0CE,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAoBA,OACE,eAAC,WAAD,WACA,cAAC,IAAD,CAAQC,KAAQF,EAAeG,QAAW,SAACC,GAAD,MAAc,qCACxD,cAAC,EAAD,UACE,uBAAMC,QAZa,WACrBJ,GAAiB,IAWkBV,UAAWC,IAAQc,KAAMC,SAvB9D,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAe9C,UACGvB,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK5B,OAEtC,sBAAKL,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK1B,OAEpC,qBAAKP,UAAWC,IAAQkC,QAAxB,SACE,wBAAQC,QAxBO,WACrB1B,GAAiB,IAuBwBV,UAAU,MAA7C,kC,gBC3BKqC,UAhBE,WACf,MAA8BC,YAAQC,KAA/BC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OACdC,EAAUC,cAChBC,qBAAU,WACM,cAAXH,GACDC,EAAQG,KAAK,aAEf,CAACJ,EAAQC,IAMX,OAAO,cAAC,EAAD,CAAWhB,UAAwB,YAAXe,EAAsBlB,WAJ7B,SAACuB,GACvBN,EAAYM","file":"static/js/6.8ee5fdd4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__50L6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1T8lG\",\"loading\":\"QuoteForm_loading__weARZ\",\"control\":\"QuoteForm_control__WWcvQ\",\"actions\":\"QuoteForm_actions__APazQ\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, Fragment, useState } from 'react';\nimport { Prompt } from \"react-router-dom\";\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isFormFocused, setIsFormFocused] = useState(false);\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const onFocusHandler = () =>{\n    setIsFormFocused(true);\n  }\n\n  const onClickHandler = () => {\n    setIsFormFocused(false);\n  }\n\n  return (\n    <Fragment>\n    <Prompt when = {isFormFocused} message = {(location) => 'Do you want to leave this page?'}/>\n    <Card>\n      <form onFocus = {onFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick = {onClickHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nconst NewQuote = () => {\r\n  const {sendRequest, status} = useHttp(addQuote);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if(status === 'completed'){\r\n      history.push('/quotes');\r\n    }\r\n  },[status, history]);\r\n  \r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return <QuoteForm isLoading = {status === 'pending'} onAddQuote={addQuoteHandler} />;\r\n};\r\n\r\nexport default NewQuote;"],"sourceRoot":""}